import { useEffect, useState } from "react";
import { getJokeByTitle, getActiveTypes } from "../services/joke-service";
import {
  Container,
  Typography,
  Box,
  Button,
  Select,
  MenuItem,
  InputLabel,
  FormControl,
  ThemeProvider,
  createTheme,
} from "@mui/material";
import Head from "next/head";

const theme = createTheme({
  palette: {
    primary: {
      main: "#556cd6",
    },
    secondary: {
      main: "#19857b",
    },
    error: {
      main: "#ff4400",
    },
    background: {
      default: "#fff",
    },
  },
  typography: {
    fontFamily: "Inter, Arial",
  },
});

export default function ReadJoke() {
  const [description, setDescription] = useState("");
  const [title, setTitle] = useState("");
  const [type, setType] = useState("");
  const [activeTypes, setActiveTypes] = useState([]);

  useEffect(() => {
    const getActiveJokesTypes = async () => {
      const types = await getActiveTypes();
      setActiveTypes(types);
    };
    getActiveJokesTypes();
  }, []);

  const handlerSubmit = async (e) => {
    e.preventDefault();
    const joke = await getJokeByTitle(type);
    if (joke) {
      setTitle(joke.jokeTitle);
      setDescription(joke.jokeDescription);
    } else {
      console.error("No joke found with the given title");
    }
  };

  return (
    <>
      <Head>
        <title>Read a Joke</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ThemeProvider theme={theme}>
        <Box
          sx={{
            backgroundImage: "url(/readjoke.jpg)",
            backgroundSize: "cover",
            backgroundPosition: "center",
            minHeight: "100vh",
            minWidth: "110vh",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
          }}
        >
          <Box
            sx={{
              position: "absolute",
              top: 0,
              left: 0,
              width: "100%",
              height: "100%",
              backgroundColor: "rgba(0, 0, 0, 0.5)",
              filter: "blur(8px)",
              zIndex: -1,
            }}
          />
          <Container
            maxWidth="sm"
            sx={{
              backgroundColor: "rgba(255, 255, 255, 0.8)", // White background with opacity
              borderRadius: "12px",
              padding: "2rem",
              boxShadow: "0 4px 8px rgba(0, 0, 0, 0.1)", // Add some shadow for a nicer look
              backdropFilter: "blur(5px)", // Apply blur to the container
              position: "relative",
              zIndex: 1,
            }}
          >
            <Typography variant="h3" component="h1" gutterBottom>
              Read a Joke
            </Typography>
            <Box component="form" onSubmit={handlerSubmit} sx={{ mt: 3 }}>
              <FormControl fullWidth sx={{ mb: 2 }}>
                <InputLabel id="jokeType-label">Select category</InputLabel>
                <Select
                  labelId="jokeType-label"
                  id="jokeType"
                  required
                  value={type}
                  label="Select category"
                  onChange={(e) => setType(e.target.value)}
                >
                  <MenuItem value=""></MenuItem>
                  {activeTypes.map((type) => (
                    <MenuItem key={type} value={type}>
                      {type}
                    </MenuItem>
                  ))}
                </Select>
              </FormControl>
              <Button
                type="submit"
                variant="contained"
                color="primary"
                fullWidth
                sx={{
                  borderRadius: "8px",
                  width: "150px",
                  borderRadius: "80px",
                  background: "black",
                }}
              >
                get a joke
              </Button>
            </Box>
            {title && (
              <Box sx={{ mt: 4 }}>
                <Typography variant="h5" component="h2" gutterBottom>
                  {title}
                </Typography>
                <Typography
                  variant="body1"
                  component="p"
                  sx={{ whiteSpace: "pre-line" }}
                >
                  {description}
                </Typography>
              </Box>
            )}
          </Container>
        </Box>
      </ThemeProvider>
    </>
  );
}
